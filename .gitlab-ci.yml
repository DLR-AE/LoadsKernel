variables:
  GIT_STRATEGY: clone

stages:
  - test
  - deploy

.virtenv: &virtualenv
  - source /work/f_jwsb/software/miniforge3/etc/profile.d/conda.sh
  # This is the environment where I installed all dependencies.
  - conda activate lk_ci_python3.12
  # To make things faster, re-use existing site packages. 
  - python -m venv virtualenv --system-site-packages
  - source virtualenv/bin/activate
  # Python's venv comes with an older version of pip, so update it.
  - pip install --upgrade pip
  # Check python version
  - which python
  - which pytest
  # Check MPI
  - which mpiexec
  # Check location
  - pwd
  
LongTermContinuousIntegration:
  stage: test
  timeout: 3 hours
  coverage: '/^TOTAL.+?(\d+\%)$/'
  tags:
    - lk
  script:
    # Set-up the environement
    - *virtualenv
    # Install with -e (in editable mode) to allow the tracking of the test coverage
    - pip install -e .[test,extras]
    - pip list
    # Get the examples repository
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.dlr.de/loads-kernel/loads-kernel-examples.git
    # Run the actual testing of the code with pytest
    # Using python -m pytest is necessary because pytest has the habit of not looking in the site-packages of the venv
    - python -m pytest -v --basetemp=./tmp --cov=loadskernel  --cov=modelviewer --cov=loadscompare --junitxml=testresult.xml
    # Create some reports
    - coverage report
    - coverage xml -o coverage.xml
    - coverage html --directory ./coverage
  artifacts:
    when: always
    paths:
      - coverage.xml
      - testresult.xml
      - coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: testresult.xml

deploy-pages:
  stage: deploy
  tags:
    - lk
  dependencies:
    - LongTermContinuousIntegration
  script:
    - mkdir public
    # Publish the coverage htlm results
    - mv coverage ./public/coverage
  artifacts:
    paths:
      - public
